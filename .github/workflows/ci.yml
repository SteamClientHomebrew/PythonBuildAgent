name: Python 3.11.8 32-bit Builder

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11.8]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            zlib1g-dev:i386 \
            libncurses5-dev:i386 \
            libgdbm-dev:i386 \
            libnss3-dev:i386 \
            libssl-dev:i386 \
            libreadline-dev:i386 \
            libffi-dev:i386 \
            wget \
            curl \
            libbz2-dev:i386 \
            libsqlite3-dev:i386 \
            liblzma-dev:i386 \
            gcc-multilib \
            g++-multilib \
            libexpat1-dev:i386 \
            libuuid1:i386

      - name: Download Python 3.11.8 source
        run: |
          wget https://www.python.org/ftp/python/3.11.8/Python-3.11.8.tgz
          tar -xf Python-3.11.8.tgz

      - name: Configure and build Python 3.11.8 (32-bit)
        run: |
          mkdir -p $HOME/.millennium/ext/data/cache
          cd Python-3.11.8
          sudo CFLAGS="-m32" LDFLAGS="-m32" ./configure --prefix=$HOME/.millennium/ext/data/cache --enable-optimizations
          sudo make -j$(nproc)
          sudo make altinstall
  
      - name: Setup installation
        run: |
          sudo mkdir -p $HOME/.millennium/ext/data/cache/lib/tmp
          cd $HOME/.millennium/ext/data/cache/lib/tmp
          sudo ar -x ../libpython3.11.a
          sudo gcc -m32 -shared -o ../libpython-3.11.8.so *.o
  
          cd $HOME/.millennium/ext/data/cache/lib
          sudo rm -rf tmp
          ls
  
          sudo mkdir -p $HOME/Documents/LibPython/
          cd $HOME/.millennium/ext/data/cache/include/python3.11/
          sudo mv * $HOME/Documents/LibPython/
  
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/test/
          sudo rm -rf $HOME/.millennium/ext/data/cache/share
          sudo rm -rf $HOME/.millennium/ext/data/cache/include
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/__pycache__/
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/config-3.11-x86_64-linux-gnu/
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/tkinter/
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/ensurepip/
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/idlelib/
          sudo rm -rf $HOME/.millennium/ext/data/cache/lib/python3.11/turtledemo/

          sudo rm $HOME/.millennium/ext/data/cache/lib/libpython3.11.a
  
          sudo mkdir -p $HOME/.millennium/lib

          sudo strip $HOME/.millennium/ext/data/cache/bin/python3.11
          sudo strip $HOME/.millennium/ext/data/cache/lib/libpython-3.11.8.so

          sudo rm $HOME/.millennium/ext/data/cache/bin/python3.11-config
          sudo rm $HOME/.millennium/ext/data/cache/bin/idle3.11
          sudo rm $HOME/.millennium/ext/data/cache/bin/pydoc3.11
          sudo rm $HOME/.millennium/ext/data/cache/bin/pip3.11
          sudo rm $HOME/.millennium/ext/data/cache/bin/2to3-3.11

          sudo mv $HOME/.millennium/ext/data/cache/bin/python3.11 $HOME/.millennium/ext/data/cache/bin/python3.11.8-i686-bin

          sudo mv $HOME/.millennium/ext/data/cache/* $HOME/.millennium/
          sudo rm -rd $HOME/.millennium/ext

          cd $HOME/
          tar -czf python-3.11.8-32-bit.tar.gz $HOME/.millennium/

      - name: Upload Python 3.11.8 (32-bit) artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: python-3.11.8-32-bit
          path: /home/runner/.millennium/

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Semantic Release
        run: npm install --save-dev semantic-release @semantic-release/github @semantic-release/exec @semantic-release/changelog @semantic-release/git
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
